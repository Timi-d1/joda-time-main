/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 27 21:32:04 GMT 2025
 */

package org.joda.time.base;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.joda.time.Chronology;
import org.joda.time.DateTime;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.Days;
import org.joda.time.Duration;
import org.joda.time.DurationFieldType;
import org.joda.time.Hours;
import org.joda.time.Instant;
import org.joda.time.Interval;
import org.joda.time.LocalDateTime;
import org.joda.time.Minutes;
import org.joda.time.MonthDay;
import org.joda.time.Months;
import org.joda.time.MutableDateTime;
import org.joda.time.MutableInterval;
import org.joda.time.MutablePeriod;
import org.joda.time.Partial;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.joda.time.ReadableInstant;
import org.joda.time.ReadableInterval;
import org.joda.time.ReadablePartial;
import org.joda.time.ReadablePeriod;
import org.joda.time.Seconds;
import org.joda.time.Weeks;
import org.joda.time.YearMonth;
import org.joda.time.Years;
import org.joda.time.base.BaseSingleFieldPeriod;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.CopticChronology;
import org.joda.time.chrono.GJChronology;
import org.joda.time.chrono.IslamicChronology;
import org.joda.time.chrono.LenientChronology;
import org.joda.time.field.UnsupportedDurationField;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeParser;
import org.joda.time.format.DateTimePrinter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseSingleFieldPeriod_ESTest extends BaseSingleFieldPeriod_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Months months0 = Months.TEN;
      months0.hashCode();
      months0.negated();
      Months months1 = Months.FIVE;
      String string0 = "";
      int int0 = (-158);
      months1.minus((-158));
      DurationFieldType durationFieldType0 = DurationFieldType.eras();
      DateTimeZone dateTimeZone0 = DateTimeZone.UTC;
      DateTimeZone.getNameProvider();
      months1.get(durationFieldType0);
      // Undeclared exception!
      try { 
        months1.getFieldType((-158));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // -158
         //
         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
      }
  }

//  @Test(timeout = 4000)
//  public void test01()  throws Throwable  {
//      Years years0 = Years.TWO;
//      // Undeclared exception!
//      try { 
//        years0.toMutablePeriod();
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.chrono.ISOChronology
//         //
//         verifyException("org.joda.time.DateTimeUtils", e);
//      }
//  }

//  @Test(timeout = 4000)
//  public void test02()  throws Throwable  {
//      ReadableInstant readableInstant0 = null;
//      // Undeclared exception!
//      try { 
//        Days.daysBetween((ReadableInstant) null, (ReadableInstant) null);
//        fail("Expecting exception: IllegalArgumentException");
//      
//      } catch(IllegalArgumentException e) {
//         //
//         // ReadableInstant objects must not be null
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test03()  throws Throwable  {
//      Days days0 = Days.SIX;
//      Weeks weeks0 = days0.toStandardWeeks();
//      Months months0 = Months.NINE;
//      DurationFieldType durationFieldType0 = DurationFieldType.days();
//      days0.isSupported(durationFieldType0);
//      DurationFieldType durationFieldType1 = months0.getFieldType();
//      weeks0.isSupported(durationFieldType1);
//      Days days1 = weeks0.toStandardDays();
//      Days days2 = Days.SEVEN;
//      days2.isSupported((DurationFieldType) null);
//      days0.isGreaterThan(days1);
//      Days.parseDays("org.joda.time.format,PeriodFosmatterBuilderkComposite");
//      days2.toStandardWeeks();
//  }
//
//  @Test(timeout = 4000)
//  public void test04()  throws Throwable  {
//      Duration duration0 = Duration.standardDays((-743L));
//      duration0.withMillis((-743L));
//      DurationFieldType[] durationFieldTypeArray0 = new DurationFieldType[5];
//      Days days0 = Days.MIN_VALUE;
//      DurationFieldType durationFieldType0 = days0.getFieldType();
//      durationFieldTypeArray0[0] = durationFieldType0;
//      UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
//      DurationFieldType durationFieldType1 = unsupportedDurationField0.getType();
//      durationFieldTypeArray0[1] = durationFieldType1;
//      DurationFieldType durationFieldType2 = DurationFieldType.minutes();
//      durationFieldTypeArray0[2] = durationFieldType2;
//      Seconds seconds0 = Seconds.ONE;
//      DurationFieldType durationFieldType3 = seconds0.getFieldType();
//      durationFieldTypeArray0[3] = durationFieldType3;
//      Instant instant0 = new Instant();
//      Instant instant1 = instant0.toInstant();
//      Weeks.weeksBetween((ReadableInstant) instant1, (ReadableInstant) instant0);
//      Months months0 = null;
//      try {  
//      months0 = Months.EIGHT;
//      } catch(NoClassDefFoundError e) {}
//  }
//
//  @Test(timeout = 4000)
//  public void test05()  throws Throwable  {
//      Years years0 = Years.years(781);
//      Days days0 = Days.SIX;
//      Weeks weeks0 = days0.toStandardWeeks();
//      Months months0 = Months.NINE;
//      DurationFieldType durationFieldType0 = months0.getFieldType();
//      weeks0.isSupported(durationFieldType0);
//      Days days1 = weeks0.toStandardDays();
//      years0.compareTo((BaseSingleFieldPeriod) days1);
//      Days days2 = null;
//      try {  
//      days2 = Days.SEVEN;
//      } catch(ClassCastException e) {}
//  }
//
//  @Test(timeout = 4000)
//  public void test06()  throws Throwable  {
//      Seconds seconds0 = Seconds.seconds((-1107));
//      Seconds seconds1 = seconds0.multipliedBy(0);
//      int int0 = (-2715);
//      Seconds seconds2 = seconds0.dividedBy((-2715));
//      seconds2.compareTo((BaseSingleFieldPeriod) seconds1);
//      seconds2.minus((-2715));
//      Months months0 = Months.ONE;
//      months0.negated();
//      Period period0 = Period.millis((-2715));
//      CopticChronology copticChronology0 = CopticChronology.getInstanceUTC();
//      YearMonth yearMonth0 = null;
//      try {
//        yearMonth0 = new YearMonth(period0, copticChronology0);
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test07()  throws Throwable  {
//      Seconds seconds0 = Seconds.seconds((-1107));
//      Seconds seconds1 = seconds0.multipliedBy((-14));
//      int int0 = (-2715);
//      Seconds.seconds(2);
//      Seconds seconds2 = seconds0.dividedBy((-2715));
//      seconds2.compareTo((BaseSingleFieldPeriod) seconds1);
//      seconds2.minus((-2715));
//      Months months0 = Months.ONE;
//      Months months1 = Months.SEVEN;
//      Period period0 = seconds2.toPeriod();
//      CopticChronology copticChronology0 = CopticChronology.getInstanceUTC();
//      YearMonth yearMonth0 = new YearMonth(period0, copticChronology0);
//      // Undeclared exception!
//      try { 
//        seconds2.hashCode();
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.Period
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test08()  throws Throwable  {
//      int int0 = (-1107);
//      Seconds seconds0 = Seconds.MAX_VALUE;
//      int int1 = (-2715);
//      Seconds.standardSecondsIn(seconds0);
//      // Undeclared exception!
//      try { 
//        seconds0.minus(int1);
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.chrono.ISOChronology
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test09()  throws Throwable  {
//      int int0 = 0;
//      Weeks weeks0 = Weeks.MAX_VALUE;
//      Weeks.weeksBetween((ReadablePartial) null, (ReadablePartial) null);
//      int int1 = 478;
//      // Undeclared exception!
//      try { 
//        weeks0.dividedBy(int1);
//        fail("Expecting exception: IllegalArgumentException");
//      
//      } catch(IllegalArgumentException e) {
//         //
//         // ReadablePartial objects must not be null
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }

//  @Test(timeout = 4000)
//  public void test10()  throws Throwable  {
//      ReadablePeriod readablePeriod0 = null;
//      Weeks.standardWeeksIn((ReadablePeriod) null);
//      Period period0 = Period.minutes((-196));
//      // Undeclared exception!
//      try { 
//        period0.toStandardHours();
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//      }
//  }

//  @Test(timeout = 4000)
//  public void test11()  throws Throwable  {
//      Seconds seconds0 = Seconds.MAX_VALUE;
//      Hours hours0 = Hours.ZERO;
//      Seconds seconds1 = hours0.toStandardSeconds();
//      seconds1.equals(seconds0);
//      int int0 = (-38);
//      seconds1.multipliedBy((-38));
//      seconds0.equals(seconds1);
//      Hours hours1 = seconds0.toStandardHours();
//      hours1.toStandardDays();
//      seconds0.getPeriodType();
//      hours1.getPeriodType();
//      int int1 = (-1007);
//      Weeks.weeks((-1007));
//      DateTime dateTime0 = null;
//      try {
//        dateTime0 = new DateTime();
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.chrono.ISOChronology
//         //
//         verifyException("org.joda.time.base.BaseDateTime", e);
//      }
//  }

//  @Test(timeout = 4000)
//  public void test12()  throws Throwable  {
//      Seconds seconds0 = Seconds.TWO;
//      Seconds seconds1 = seconds0.multipliedBy((-856));
//      Seconds seconds2 = seconds1.plus((-856));
//      seconds0.plus((-59));
//      seconds2.getValue((-59));
//      seconds1.getSeconds();
//      Minutes minutes0 = null;
//      try {  
//      minutes0 = Minutes.THREE;
//      } catch(IndexOutOfBoundsException e) {}
//  }
//
//  @Test(timeout = 4000)
//  public void test13()  throws Throwable  {
//      Hours hours0 = Hours.SEVEN;
//      Years years0 = Years.ONE;
//      years0.equals(hours0);
//      String string0 = ";3hkr2}I";
//      int int0 = 1;
//      // Undeclared exception!
//      try { 
//        years0.getFieldType(1);
//        fail("Expecting exception: IndexOutOfBoundsException");
//      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // 1
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test14()  throws Throwable  {
//      Years years0 = Years.THREE;
//      years0.equals((Object) null);
//      years0.hashCode();
//      Years years1 = years0.minus(157);
//      Days days0 = Days.FOUR;
//      years1.plus(years0);
//      days0.toStandardMinutes();
//      Seconds seconds0 = Seconds.parseSeconds("");
//      int int0 = (-577);
//      DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHours(int0);
//      DateTime dateTime0 = null;
//      try {
//        dateTime0 = new DateTime(seconds0, dateTimeZone0);
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.chrono.ISOChronology
//         //
//         verifyException("org.joda.time.DateTimeUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test15()  throws Throwable  {
//      Days days0 = Days.daysBetween((ReadableInstant) null, (ReadableInstant) null);
//      // Undeclared exception!
//      try { 
//        days0.toString();
//        fail("Expecting exception: IllegalArgumentException");
//      
//      } catch(IllegalArgumentException e) {
//         //
//         // ReadableInstant objects must not be null
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test16()  throws Throwable  {
//      Months months0 = Months.TWO;
//      BaseSingleFieldPeriod.standardPeriodIn(months0, 168L);
//      String string0 = "";
//  }
//
//  @Test(timeout = 4000)
//  public void test17()  throws Throwable  {
//      Months months0 = Months.ZERO;
//      Minutes minutes0 = Minutes.minutes(0);
//      months0.equals(minutes0);
//  }

//  @Test(timeout = 4000)
//  public void test18()  throws Throwable  {
//      Days days0 = Days.ONE;
//      // Undeclared exception!
//      try { 
//        days0.toPeriod();
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.Period
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }

//  @Test(timeout = 4000)
//  public void test19()  throws Throwable  {
//      Weeks weeks0 = Weeks.standardWeeksIn((ReadablePeriod) null);
//      Weeks weeks1 = Weeks.ONE;
//      Weeks weeks2 = Weeks.THREE;
//      weeks1.plus(weeks2);
//      weeks0.plus(weeks1);
//      weeks0.toStandardDays();
//      Weeks.parseWeeks((String) null);
//      Days days0 = Days.standardDaysIn((ReadablePeriod) null);
//      days0.toPeriod();
//      String string0 = "QL?v7}%BX";
//      DateTimePrinter dateTimePrinter0 = null;
//  }
//
//  @Test(timeout = 4000)
//  public void test20()  throws Throwable  {
//      Months months0 = Months.FIVE;
//      Months months1 = Months.TWO;
//      Hours hours0 = Hours.ZERO;
//      Days days0 = hours0.toStandardDays();
//      DurationFieldType durationFieldType0 = days0.getFieldType();
//      months1.get(durationFieldType0);
//      months0.plus(months1);
//  }

//  @Test(timeout = 4000)
//  public void test21()  throws Throwable  {
//      Instant instant0 = Instant.ofEpochSecond((-1520L));
//      Days days0 = Days.daysBetween((ReadableInstant) instant0, (ReadableInstant) instant0);
//      // Undeclared exception!
//      try { 
//        days0.toStandardHours();
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.chrono.ISOChronology
//         //
//         verifyException("org.joda.time.Instant", e);
//      }
//  }

//  @Test(timeout = 4000)
//  public void test22()  throws Throwable  {
//      Days days0 = Days.ZERO;
//      days0.toStandardMinutes();
//      days0.hashCode();
//  }

//  @Test(timeout = 4000)
//  public void test23()  throws Throwable  {
//      Years years0 = Years.parseYears((String) null);
//      years0.minus(0);
//      years0.toMutablePeriod();
//      int int0 = 1024;
//      // Undeclared exception!
//      try { 
//        years0.minus(int0);
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.chrono.ISOChronology
//         //
//         verifyException("org.joda.time.DateTimeUtils", e);
//      }
//  }

//  @Test(timeout = 4000)
//  public void test24()  throws Throwable  {
//      Hours hours0 = Hours.THREE;
//      // Undeclared exception!
//      try { 
//        hours0.toMutablePeriod();
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.chrono.ISOChronology
//         //
//         verifyException("org.joda.time.DateTimeUtils", e);
//      }
//  }

//  @Test(timeout = 4000)
//  public void test25()  throws Throwable  {
//      Minutes.minutesBetween((ReadablePartial) null, (ReadablePartial) null);
//      Seconds seconds0 = null;
//      try {  
//      seconds0 = Seconds.MAX_VALUE;
//      } catch(MockIllegalArgumentException e) {}
//  }
//
//  @Test(timeout = 4000)
//  public void test26()  throws Throwable  {
//      Years years0 = Years.ZERO;
//      int int0 = (-1159);
//      years0.equals((Object) null);
//      int int1 = 0;
//      Months months0 = Months.NINE;
//      years0.compareTo((BaseSingleFieldPeriod) months0);
//      // Undeclared exception!
//      try { 
//        DateTimeZone.forOffsetHoursMinutes(int0, int1);
//        fail("Expecting exception: ClassCastException");
//      
//      } catch(ClassCastException e) {
//         //
//         // class org.joda.time.Years cannot be compared to class org.joda.time.Months
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test27()  throws Throwable  {
//      Years years0 = Years.TWO;
//      int int0 = (-1681);
//      // Undeclared exception!
//      try { 
//        years0.getFieldType((-1681));
//        fail("Expecting exception: IndexOutOfBoundsException");
//      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // -1681
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test28()  throws Throwable  {
//      Hours hours0 = Hours.THREE;
//      Minutes minutes0 = Minutes.ZERO;
//      minutes0.getFieldType(0);
//      hours0.getPeriodType();
//      minutes0.dividedBy(3331);
//      Hours hours1 = minutes0.toStandardHours();
//      hours0.isLessThan(hours1);
//      ReadableInterval readableInterval0 = null;
//      Minutes minutes1 = Minutes.minutesIn((ReadableInterval) null);
//      Weeks weeks0 = minutes1.toStandardWeeks();
//      weeks0.getPeriodType();
//      hours0.compareTo((BaseSingleFieldPeriod) minutes0);
//      hours1.toStandardDuration();
//      Years years0 = null;
//      try {  
//      years0 = Years.ONE;
//      } catch(ClassCastException e) {}
//  }
//
//  @Test(timeout = 4000)
//  public void test29()  throws Throwable  {
//      Hours hours0 = Hours.FIVE;
//      Weeks weeks0 = hours0.toStandardWeeks();
//      weeks0.getValue(0);
//      weeks0.toStandardHours();
//      weeks0.getWeeks();
//  }
//
//  @Test(timeout = 4000)
//  public void test30()  throws Throwable  {
//      Months months0 = Months.SIX;
//      months0.hashCode();
//      Months months1 = Months.FOUR;
//      months1.getValue(1);
//      int int0 = 0;
//  }
//
//  @Test(timeout = 4000)
//  public void test31()  throws Throwable  {
//      Years years0 = Years.years(781);
//      Days days0 = Days.ZERO;
//      Weeks weeks0 = days0.toStandardWeeks();
//      Months months0 = Months.NINE;
//      DurationFieldType durationFieldType0 = DurationFieldType.weeks();
//      weeks0.isSupported(durationFieldType0);
//      Days days1 = weeks0.toStandardDays();
//      years0.compareTo((BaseSingleFieldPeriod) days1);
//      Days days2 = null;
//      try {  
//      days2 = Days.SEVEN;
//      } catch(ClassCastException e) {}
//  }
//
//  @Test(timeout = 4000)
//  public void test32()  throws Throwable  {
//      Seconds seconds0 = Seconds.THREE;
//      Seconds seconds1 = Seconds.TWO;
//      seconds1.getValue(0);
//      seconds0.isGreaterThan(seconds1);
//      Minutes minutes0 = Minutes.parseMinutes("$)P9<Y]8@8IXzUs)`.&");
//      Minutes.standardMinutesIn(minutes0);
//      // Undeclared exception!
//      try { 
//        minutes0.toStandardWeeks();
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.chrono.ISOChronology
//         //
//         verifyException("org.joda.time.DateTimeUtils", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test33()  throws Throwable  {
//      Days days0 = Days.THREE;
//      Days.parseDays((String) null);
//      days0.negated();
//      days0.getDays();
//      Months months0 = Months.ELEVEN;
//      DurationFieldType durationFieldType0 = DurationFieldType.millis();
//      months0.get(durationFieldType0);
//      int int0 = 0;
//      Months months1 = months0.minus(0);
//      months0.plus(months1);
//      Seconds seconds0 = Seconds.TWO;
//      seconds0.getFieldType((-2132));
//      seconds0.toStandardWeeks();
//      // Undeclared exception!
//      try { 
//        Seconds.seconds(int0);
//        fail("Expecting exception: IndexOutOfBoundsException");
//      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // -2132
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test34()  throws Throwable  {
//      Seconds seconds0 = Seconds.TWO;
//      Hours hours0 = seconds0.toStandardHours();
//      Weeks weeks0 = hours0.toStandardWeeks();
//      weeks0.getFieldType(46);
//      // Undeclared exception!
//      try { 
//        weeks0.toStandardHours();
//        fail("Expecting exception: IndexOutOfBoundsException");
//      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // 46
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test35()  throws Throwable  {
//      Hours hours0 = Hours.MAX_VALUE;
//      Hours hours1 = Hours.hours(0);
//      hours0.getHours();
//      hours1.getPeriodType();
//      Period period0 = new Period(24, 12, 1579, 1579);
//      Period period1 = period0.plus(hours0);
//      Hours hours2 = period1.toStandardHours();
//      hours0.plus(hours2);
//  }
//
//  @Test(timeout = 4000)
//  public void test36()  throws Throwable  {
//      Seconds seconds0 = Seconds.ZERO;
//      String string0 = seconds0.toString();
//      Seconds.seconds(768);
//      Months months0 = Months.TWO;
//      int int0 = 400;
//      months0.plus(400);
//      Seconds.seconds((-1097));
//      seconds0.compareTo((BaseSingleFieldPeriod) null);
//      Years years0 = Years.parseYears(string0);
//      years0.dividedBy(int0);
//      // Undeclared exception!
//      try { 
//        Seconds.parseSeconds(string0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test37()  throws Throwable  {
//      Years years0 = Years.THREE;
//      years0.dividedBy(69);
//      years0.size();
//      Months months0 = Months.FIVE;
//      months0.plus(69);
//      Minutes minutes0 = Minutes.MAX_VALUE;
//      minutes0.toString();
//  }

//  @Test(timeout = 4000)
//  public void test38()  throws Throwable  {
//      Days days0 = Days.SIX;
//      DurationFieldType durationFieldType0 = days0.getFieldType(0);
//      days0.get(durationFieldType0);
//      int int0 = 0;
//      Weeks weeks0 = Weeks.weeks(0);
//      weeks0.toStandardHours();
//      MutableDateTime mutableDateTime0 = new MutableDateTime((-1068L));
//      days0.negated();
//      // Undeclared exception!
//      try { 
//        weeks0.getPeriodType();
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.chrono.ISOChronology
//         //
//         verifyException("org.joda.time.base.BaseDateTime", e);
//      }
//  }

//  @Test(timeout = 4000)
//  public void test39()  throws Throwable  {
//      BaseSingleFieldPeriod.standardPeriodIn((ReadablePeriod) null, 0L);
//      Minutes minutes0 = Minutes.ONE;
//      MutablePeriod mutablePeriod0 = new MutablePeriod((PeriodType) null);
//      minutes0.equals(mutablePeriod0);
//      minutes0.toStandardSeconds();
//  }

//  @Test(timeout = 4000)
//  public void test40()  throws Throwable  {
//      Seconds seconds0 = Seconds.MAX_VALUE;
//      Hours hours0 = Hours.ZERO;
//      seconds0.equals(seconds0);
//      int int0 = (-38);
//      seconds0.equals(seconds0);
//      hours0.toStandardDays();
//      seconds0.getPeriodType();
//      hours0.getPeriodType();
//      int int1 = (-1002);
//      Weeks.weeks((-1002));
//      DateTime dateTime0 = null;
//      try {
//        dateTime0 = new DateTime();
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.chrono.ISOChronology
//         //
//         verifyException("org.joda.time.base.BaseDateTime", e);
//      }
//  }

//  @Test(timeout = 4000)
//  public void test41()  throws Throwable  {
//      Seconds seconds0 = Seconds.seconds((-1107));
//      Seconds seconds1 = seconds0.multipliedBy(0);
//      int int0 = (-2715);
//      Seconds seconds2 = seconds0.dividedBy((-2715));
//      seconds2.compareTo((BaseSingleFieldPeriod) seconds1);
//      seconds2.minus((-2715));
//      Months months0 = Months.ONE;
//      months0.negated();
//      Period period0 = seconds2.toPeriod();
//      CopticChronology copticChronology0 = CopticChronology.getInstanceUTC();
//      YearMonth yearMonth0 = null;
//      try {
//        yearMonth0 = new YearMonth(period0, copticChronology0);
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.Period
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test42()  throws Throwable  {
//      Seconds seconds0 = Seconds.seconds((-1107));
//      seconds0.multipliedBy(0);
//      int int0 = (-2715);
//      Seconds seconds1 = seconds0.dividedBy((-2715));
//      Seconds seconds2 = seconds1.minus((-2715));
//      seconds0.compareTo((BaseSingleFieldPeriod) seconds2);
//      Period period0 = seconds1.toPeriod();
//      CopticChronology copticChronology0 = CopticChronology.getInstanceUTC();
//      YearMonth yearMonth0 = null;
//      try {
//        yearMonth0 = new YearMonth(period0, copticChronology0);
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.Period
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test43()  throws Throwable  {
//      Seconds seconds0 = Seconds.seconds((-1107));
//      int int0 = (-2715);
//      Seconds seconds1 = seconds0.dividedBy((-2715));
//      seconds1.compareTo((BaseSingleFieldPeriod) seconds0);
//      seconds1.minus((-2715));
//      Months months0 = Months.ONE;
//      months0.negated();
//      Period period0 = seconds1.toPeriod();
//      CopticChronology copticChronology0 = CopticChronology.getInstanceUTC();
//      YearMonth yearMonth0 = null;
//      try {
//        yearMonth0 = new YearMonth(period0, copticChronology0);
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.Period
//         //
//         verifyException("org.joda.time.base.BaseSingleFieldPeriod", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test44()  throws Throwable  {
//      Seconds seconds0 = Seconds.THREE;
//      Seconds seconds1 = Seconds.MIN_VALUE;
//      seconds1.getValue(0);
//      seconds0.isGreaterThan(seconds1);
//      Minutes minutes0 = Minutes.parseMinutes("$)P9<Y]8@8IXzUs)`.&");
//      Minutes.standardMinutesIn(minutes0);
//      // Undeclared exception!
//      try { 
//        minutes0.toStandardWeeks();
//        fail("Expecting exception: NoClassDefFoundError");
//      
//      } catch(NoClassDefFoundError e) {
//         //
//         // Could not initialize class org.joda.time.chrono.ISOChronology
//         //
//         verifyException("org.joda.time.DateTimeUtils", e);
//      }
//  }
}
