/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 27 22:18:16 GMT 2025
 */

package org.joda.time.base;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Duration;
import org.joda.time.Hours;
import org.joda.time.Instant;
import org.joda.time.Interval;
import org.joda.time.MutableInterval;
import org.joda.time.ReadableInstant;
import org.joda.time.Weeks;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseInterval_ESTest extends BaseInterval_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Hours hours0 = Hours.MAX_VALUE;
      Instant instant0 = new Instant();
      Interval interval0 = new Interval(hours0, instant0);
      assertEquals((-7729548719918680L), interval0.getStartMillis());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Hours hours0 = Hours.MAX_VALUE;
      Instant instant0 = new Instant();
      Interval interval0 = new Interval(instant0, hours0);
      assertEquals(7732333538481320L, interval0.getEndMillis());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MutableInterval mutableInterval0 = new MutableInterval((ReadableInstant) null, (ReadableInstant) null);
      assertEquals(1392409281320L, mutableInterval0.getEndMillis());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Instant instant0 = new Instant();
      MutableInterval mutableInterval0 = new MutableInterval((ReadableInstant) null, instant0);
      assertEquals(1392409281320L, mutableInterval0.getEndMillis());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Instant instant0 = Instant.now();
      MutableInterval mutableInterval0 = new MutableInterval(instant0, instant0);
      assertEquals(1392409281320L, mutableInterval0.getStartMillis());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Duration duration0 = Duration.ZERO;
      MutableInterval mutableInterval0 = new MutableInterval((ReadableInstant) null, duration0);
      assertEquals(1392409281320L, mutableInterval0.getEndMillis());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        Interval.parse("org.joda.time.base.BaseInterval");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Format requires a '/' separator: org.joda.time.base.BaseInterval
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Weeks weeks0 = Weeks.THREE;
      Duration duration0 = weeks0.toStandardDuration();
      Interval interval0 = duration0.toIntervalTo((ReadableInstant) null);
      assertEquals(1390594881320L, interval0.getStartMillis());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MutableInterval mutableInterval0 = new MutableInterval((Object) null);
      assertEquals(1392409281320L, mutableInterval0.getEndMillis());
      assertEquals(1392409281320L, mutableInterval0.getStartMillis());
  }
}
