/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 27 23:28:09 GMT 2025
 */

package org.joda.time.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.MutableInterval;
import org.joda.time.MutablePeriod;
import org.joda.time.ReadWritableInterval;
import org.joda.time.ReadWritablePeriod;
import org.joda.time.chrono.CopticChronology;
import org.joda.time.chrono.GregorianChronology;
import org.joda.time.chrono.IslamicChronology;
import org.joda.time.convert.NullConverter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NullConverter_ESTest extends NullConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NullConverter nullConverter0 = new NullConverter();
      GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
      // Undeclared exception!
      try { 
        nullConverter0.setInto((ReadWritablePeriod) null, (Object) null, (Chronology) gregorianChronology0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.NullConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NullConverter nullConverter0 = new NullConverter();
      IslamicChronology islamicChronology0 = IslamicChronology.getInstanceUTC();
      // Undeclared exception!
      try { 
        nullConverter0.setInto((ReadWritableInterval) null, (Object) null, (Chronology) islamicChronology0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.NullConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NullConverter nullConverter0 = new NullConverter();
      MutablePeriod mutablePeriod0 = new MutablePeriod();
      CopticChronology copticChronology0 = CopticChronology.getInstance();
      nullConverter0.setInto((ReadWritablePeriod) mutablePeriod0, (Object) null, (Chronology) copticChronology0);
      assertEquals(1, CopticChronology.AM);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NullConverter nullConverter0 = new NullConverter();
      Class<?> class0 = nullConverter0.getSupportedType();
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NullConverter nullConverter0 = new NullConverter();
      CopticChronology copticChronology0 = CopticChronology.getInstance();
      MutableInterval mutableInterval0 = new MutableInterval();
      nullConverter0.setInto((ReadWritableInterval) mutableInterval0, (Object) null, (Chronology) copticChronology0);
      assertEquals(1392409281320L, mutableInterval0.getStartMillis());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NullConverter nullConverter0 = new NullConverter();
      long long0 = nullConverter0.getDurationMillis((Object) null);
      assertEquals(0L, long0);
  }
}
