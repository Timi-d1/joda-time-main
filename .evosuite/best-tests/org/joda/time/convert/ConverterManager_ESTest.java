/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 27 20:44:34 GMT 2025
 */

package org.joda.time.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.convert.ConverterManager;
import org.joda.time.convert.DurationConverter;
import org.joda.time.convert.InstantConverter;
import org.joda.time.convert.IntervalConverter;
import org.joda.time.convert.LongConverter;
import org.joda.time.convert.NullConverter;
import org.joda.time.convert.PartialConverter;
import org.joda.time.convert.PeriodConverter;
import org.joda.time.convert.ReadableDurationConverter;
import org.joda.time.convert.ReadableIntervalConverter;
import org.joda.time.convert.StringConverter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConverterManager_ESTest extends ConverterManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      PartialConverter partialConverter0 = converterManager0.getPartialConverter((Object) null);
      assertNotNull(partialConverter0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      PeriodConverter periodConverter0 = converterManager0.addPeriodConverter(readableDurationConverter0);
      assertNotSame(readableDurationConverter0, periodConverter0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      ReadableIntervalConverter readableIntervalConverter0 = new ReadableIntervalConverter();
      IntervalConverter intervalConverter0 = converterManager0.addIntervalConverter(readableIntervalConverter0);
      assertFalse(intervalConverter0.equals((Object)readableIntervalConverter0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      DurationConverter durationConverter0 = converterManager0.addDurationConverter(readableDurationConverter0);
      assertNull(durationConverter0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      PeriodConverter periodConverter0 = converterManager0.getPeriodConverter("i2Chb_TA>!O;ql");
      assertNotNull(periodConverter0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      IntervalConverter intervalConverter0 = converterManager0.removeIntervalConverter((IntervalConverter) null);
      assertNull(intervalConverter0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      ReadableIntervalConverter readableIntervalConverter0 = ReadableIntervalConverter.INSTANCE;
      IntervalConverter intervalConverter0 = converterManager0.removeIntervalConverter(readableIntervalConverter0);
      assertSame(intervalConverter0, readableIntervalConverter0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      IntervalConverter intervalConverter0 = converterManager0.addIntervalConverter((IntervalConverter) null);
      assertNull(intervalConverter0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      IntervalConverter intervalConverter0 = converterManager0.getIntervalConverter((Object) null);
      assertNotNull(intervalConverter0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      InstantConverter instantConverter0 = converterManager0.getInstantConverter("ConverterManager[6 instant,7 partial,5 duration,5 period,3 interval]");
      // Undeclared exception!
      try { 
        converterManager0.getIntervalConverter(instantConverter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No interval converter found for type: org.joda.time.convert.StringConverter
         //
         verifyException("org.joda.time.convert.ConverterManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      PeriodConverter periodConverter0 = converterManager0.removePeriodConverter((PeriodConverter) null);
      assertNull(periodConverter0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      ReadableIntervalConverter readableIntervalConverter0 = ReadableIntervalConverter.INSTANCE;
      PeriodConverter periodConverter0 = converterManager0.removePeriodConverter(readableIntervalConverter0);
      assertSame(readableIntervalConverter0, periodConverter0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      PeriodConverter periodConverter0 = converterManager0.addPeriodConverter((PeriodConverter) null);
      assertNull(periodConverter0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      PeriodConverter periodConverter0 = converterManager0.getPeriodConverter((Object) null);
      assertNotNull(periodConverter0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      ReadableIntervalConverter readableIntervalConverter0 = ReadableIntervalConverter.INSTANCE;
      // Undeclared exception!
      try { 
        converterManager0.getPeriodConverter(readableIntervalConverter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No period converter found for type: org.joda.time.convert.ReadableIntervalConverter
         //
         verifyException("org.joda.time.convert.ConverterManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      DurationConverter durationConverter0 = converterManager0.removeDurationConverter((DurationConverter) null);
      assertNull(durationConverter0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      ReadableDurationConverter readableDurationConverter0 = ReadableDurationConverter.INSTANCE;
      DurationConverter durationConverter0 = converterManager0.removeDurationConverter(readableDurationConverter0);
      assertSame(durationConverter0, readableDurationConverter0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      DurationConverter durationConverter0 = converterManager0.addDurationConverter((DurationConverter) null);
      assertNull(durationConverter0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      // Undeclared exception!
      try { 
        converterManager0.getDurationConverter((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No duration converter found for type: null
         //
         verifyException("org.joda.time.convert.ConverterManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        converterManager0.getDurationConverter(integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No duration converter found for type: java.lang.Integer
         //
         verifyException("org.joda.time.convert.ConverterManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      PartialConverter partialConverter0 = converterManager0.removePartialConverter((PartialConverter) null);
      assertNull(partialConverter0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      StringConverter stringConverter0 = StringConverter.INSTANCE;
      PartialConverter partialConverter0 = converterManager0.removePartialConverter(stringConverter0);
      assertSame(partialConverter0, stringConverter0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      PartialConverter partialConverter0 = converterManager0.addPartialConverter((PartialConverter) null);
      assertNull(partialConverter0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      StringConverter stringConverter0 = new StringConverter();
      PartialConverter partialConverter0 = converterManager0.addPartialConverter(stringConverter0);
      assertFalse(partialConverter0.equals((Object)stringConverter0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      ReadableIntervalConverter readableIntervalConverter0 = new ReadableIntervalConverter();
      // Undeclared exception!
      try { 
        converterManager0.getPartialConverter(readableIntervalConverter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No partial converter found for type: org.joda.time.convert.ReadableIntervalConverter
         //
         verifyException("org.joda.time.convert.ConverterManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      InstantConverter instantConverter0 = converterManager0.removeInstantConverter((InstantConverter) null);
      assertNull(instantConverter0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      LongConverter longConverter0 = LongConverter.INSTANCE;
      InstantConverter instantConverter0 = converterManager0.removeInstantConverter(longConverter0);
      assertSame(longConverter0, instantConverter0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      InstantConverter instantConverter0 = converterManager0.addInstantConverter((InstantConverter) null);
      assertNull(instantConverter0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      NullConverter nullConverter0 = new NullConverter();
      InstantConverter instantConverter0 = converterManager0.addInstantConverter(nullConverter0);
      assertNotSame(nullConverter0, instantConverter0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      InstantConverter instantConverter0 = converterManager0.getInstantConverter((Object) null);
      assertNotNull(instantConverter0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      LongConverter longConverter0 = LongConverter.INSTANCE;
      // Undeclared exception!
      try { 
        converterManager0.getInstantConverter(longConverter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No instant converter found for type: org.joda.time.convert.LongConverter
         //
         verifyException("org.joda.time.convert.ConverterManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      PartialConverter[] partialConverterArray0 = converterManager0.getPartialConverters();
      assertEquals(7, partialConverterArray0.length);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      InstantConverter[] instantConverterArray0 = converterManager0.getInstantConverters();
      assertEquals(6, instantConverterArray0.length);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      DurationConverter[] durationConverterArray0 = converterManager0.getDurationConverters();
      assertEquals(3, durationConverterArray0.length);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      PeriodConverter[] periodConverterArray0 = converterManager0.getPeriodConverters();
      assertEquals(5, periodConverterArray0.length);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      converterManager0.toString();
      converterManager0.getIntervalConverter("ConverterManager[5 instant,7 partial,5 duration,3 period,2 interval]");
      // Undeclared exception!
      try { 
        converterManager0.getDurationConverter("ConverterManager[5 instant,7 partial,5 duration,3 period,2 interval]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No duration converter found for type: java.lang.String
         //
         verifyException("org.joda.time.convert.ConverterManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ConverterManager converterManager0 = ConverterManager.getInstance();
      IntervalConverter[] intervalConverterArray0 = converterManager0.getIntervalConverters();
      assertEquals(3, intervalConverterArray0.length);
  }
}
